import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.io.IOException;
import java.text.NumberFormat;

@SuppressWarnings("serial")
public class MainMenu extends JPanel implements ActionListener
{
	private JFrame f;
	private JButton goBack = new JButton("Go Back");
	private JButton date = new JButton("Date");
	private JButton title = new JButton("Name");
	private JButton rating = new JButton("Rating");
	private JButton price = new JButton("Price");
	private JSplitPane splitPane = new JSplitPane();
	
	private JButton order = new JButton("Add to Cart");
	private JButton rate = new JButton("Leave Rating");
	private JButton goToCart = new JButton("Checkout");
	
	private JLabel label = new JLabel();
	private JLabel label2 = new JLabel();
	private JLabel label3 = new JLabel();
	private JLabel label4 = new JLabel();
	private NumberFormat money = NumberFormat.getCurrencyInstance();
	private JList<Item> list;
	
	
	public MainMenu()
	{
		try {
			Main.readFile();
		} catch (IOException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		}
		f = new JFrame("Staff Menu");
		f.setVisible(true);
		f.setSize(1600, 900);
		f.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
		
		label.setFont(Main.font2);
		label2.setFont(Main.font);
		label3.setFont(Main.font);
		label4.setFont(Main.font3);
		
		JPanel p = new JPanel();
		p.setBackground(Main.bGroundColor);
		p.setLayout(new BorderLayout());
		
		GridLayout glay = new GridLayout(1, 4);
		JPanel g = new JPanel();
		g.setLayout(glay);
		g.add(date);
		g.add(title);
		g.add(rating);
		g.add(price);
		
		list = new JList<>();
		list.setFont(Main.font2);
		DefaultListModel<Item> model = new DefaultListModel<>();
		list.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
		list.setModel(model);
		for(int i = 0; i < Main.items.size(); i++)
		{
			model.addElement(Main.items.get(i));
		}
		
		JPanel splitPanel = new JPanel();
		splitPanel.setBackground(Main.bGroundColor);
		splitPane.setLeftComponent(new JScrollPane(list));
		GridLayout glay2 = new GridLayout(0, 1);
		splitPanel.setLayout(glay2);
		splitPanel.add(label);
		splitPanel.add(label2);
		splitPanel.add(label3);
		splitPanel.add(label4);
		//JLabel imageLabel = new JLabel();
		
		
		splitPane.setRightComponent(splitPanel);
		
		list.getSelectionModel().addListSelectionListener(e -> {
			Item i = list.getSelectedValue();
			label.setText(money.format(i.getPrice()));
			if(i.getRating() != null)
				label2.setText("Rating: " + i.getRating() + " / 5");
			else
				label2.setText("Item not yet rated");
			
			if(i.getOrders() != null)
				label3.setText("Orders: " + i.getOrders());
			else
				label3.setText("Item not yet ordered");
			label4.setText("Description: " + i.getDesc());
				});
		//splitPanel.add(imageLabel);
		
		GridLayout grid = new GridLayout(3, 1);
		JPanel g1 = new JPanel();
		g1.setLayout(grid);
		g1.add(goToCart);
		g1.add(order);
		g1.add(rate);
		
		p.add(g1, BorderLayout.EAST);
		p.add(splitPane, BorderLayout.CENTER);
		p.add(g, BorderLayout.NORTH);
		p.add(goBack, BorderLayout.SOUTH);
		
		date.addActionListener(this);
		title.addActionListener(this);
		rating.addActionListener(this);
		price.addActionListener(this);
		order.addActionListener(this);
		rate.addActionListener(this);
		goToCart.addActionListener(this);
		goBack.addActionListener(this);
		
		f.add(p);
	}
	
	
	
	
	
	public void actionPerformed(ActionEvent g)
	{
		if(g.getSource() == goBack)
		{
			Main.WriteFile();
			new LoginMenu();
			f.dispose();
		}
		if(g.getSource() == date)
		{
			f.dispose();
		}
		if(g.getSource() == title)
		{
			f.dispose();
		}
		if(g.getSource() == rating)
		{
			f.dispose();
		}
		if(g.getSource() == price)
		{
			f.dispose();
		}
		if(g.getSource() == order)
		{
			if(!list.isSelectionEmpty())
			{
				Main.cart.add(list.getSelectedValue());
				JOptionPane.showMessageDialog(f, "'" + Main.items.get(list.getSelectedIndex()).getName() + "' added to cart");
			}
			else
				JOptionPane.showMessageDialog(f, "Please Select an item");
		}
		if(g.getSource() == rate)
		{
			if(!list.isSelectionEmpty())
				new RatePane(Main.items.get(list.getSelectedIndex()));
			else
				JOptionPane.showMessageDialog(f, "Please Select an item");
		}
		if(g.getSource() == goToCart)
			new ItemCart();
		
	}
}
